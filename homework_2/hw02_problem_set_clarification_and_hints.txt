Clarification & hints:

1(d) To get the scores, you use the centered data.

1(f) You need to center data "hw02_q1_p2" using the means calculated from (a)

1(g)
	- When it says use only the first two scores to represent the observations, it means use only the first two PCs to get the scores (in (f), all PCs are used)
    - When it is asking for the projection in the original space, check lecture 5 slide 14 and see how x' is found. 
    - To find the Euclidean distance from the original data points, calculated d(x,x') as in (h) and find the norm of this vector. (here x and x' are vectors, not matrices)
    - Remember that y (the score) is centered. When you construct x', you need to "uncenter" it too. Otherwise, d(x,x') does not make any sense.

1(h) direction means the direction of a vector. To answer which direction, compare it with the direction of PCs and see which ones are similar
 
2(a) You need to get an image of each subject with one view type, make a matrix (getChannels), and make the matrix a vector.

2(b) "Subtract this off each of the faces" should be the part of 2(c). It has nothing to do with getting the mean face image.

Each row of a matrix represents the image of each subject with specific view. Therefore, there are 38*4 rows. Order does not matter (e.g. row 1-38 is subject 1~38 with the first view, row 39~76 is subject 1~38 wit the second view.. and so on or row 1~4 is subject 1 with 4 views, row 5~8 is subject 2 with 4 views..)
 
To convert a matrix to a vector, use can use a function as.vector()
To convert a vector to a matrix, force the dimension of the vector to be a dimension of matrix you want.
For example, try:
xx = matrix(1:8,2,4)
xx.vec = as.vector(xx)
xx.vec
dim(xx.vec) = c(2,4)
xx.vec